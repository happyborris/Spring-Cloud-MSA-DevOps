server:
  port: 50001
#  port: ${random.int(50000,50001)} <<< 범위 제어 가능

spring:
  application:
    name: user-service
  zipkin:
    base-url: http://3.39.247.201:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0
  rabbitmq:
    host: 3.39.247.201
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console

#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb
#    username: sa
#    password:

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  #    prefer-ip-address: true
  #    ip-address: ${server.address}
  client:
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
    fetch-registry: true
    register-with-eureka: true

logging:
  level:
    com.example.userservice.client: DEBUG

# actuator의 기능들을 사용하기 위한 부분
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus

greeting:
  message: Welcome to the Simple E-commerce.

# order service와 통신을 위한 부분
order_service:
  url: http://order-service/order-service/%s/orders # order-service라는 app name으로 url 구성

#order_service:
#  url: http://127.0.0.1:8000/order-service/%s/orders << 이렇게 써도 됨

#token:
#  expiration_time: 864000000
#  secret: user_token
